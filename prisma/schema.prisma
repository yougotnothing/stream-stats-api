// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
  relationMode  = "prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Links {
  id     String   @id @default(uuid()) @db.Uuid
  user   User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String   @db.Uuid
  link   String
  type   LinkType

  @@index([id])
}

model TwitchUser {
  id                String   @id @unique
  userId            String   @unique @db.Uuid
  login             String   @unique
  display_name      String
  type              String
  broadcaster_type  String
  description       String
  profile_image_url String
  offline_image_url String
  view_count        Int
  email             String   @unique
  created_at        DateTime
  user              User     @relation(fields: [userId], references: [id])
}

model User {
  role         Role        @default(USER)
  id           String      @id @default(uuid()) @db.Uuid
  email        String      @unique
  name         String
  links        Links[]
  avatarUrl    String      @default("")
  isHaveAvatar Boolean     @default(false)
  isVerified   Boolean     @default(false)
  createdAt    DateTime    @default(now()) @db.Timestamp
  twitch_user  TwitchUser?
  password     String
}

enum Role {
  ADMIN
  USER
}

enum LinkType {
  YOUTUBE
  TWITCH
  TROVO
  KICK
}
